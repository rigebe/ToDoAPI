'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
var Joi = require('joi');

var validation = {

  id: Joi.number().integer().min(1).required(),
  offset: Joi.number().integer().min(0)['default'](0, 'results offset'),
  limit: Joi.number().integer().min(1).max(100)['default'](20, 'number of results per set'),

  include: function include(model) {
    return Joi.string();
  },

  filter: function filter(model) {
    return Joi.object();
  }
};

exports.validation = validation;
var queryParams = function queryParams(server, request) {

  var q = request.query;
  var models = server.plugins['hapi-sequelize'].db.sequelize.models;

  return {
    where: q.filter || {},
    offset: q.offset,
    limit: q.limit,
    include: q.include ? [models[q.include]] : []
  };
};

exports.queryParams = queryParams;
var getModel = function getModel(request, model, param) {

  param = param || 'id';
  var id = request.params[param];

  return request.pre.model ? Promise.resolve(request.pre.model) : model.scope(prepareScopes(request.pre.scope)).findById(id);
};

exports.getModel = getModel;
var prepareScopes = function prepareScopes(scopes) {

  if (!Array.isArray(scopes)) {
    scopes = [scopes];
  }

  var flattenedScopes = scopes.reduce(function (flat, item) {

    if (Array.isArray(item)) {
      item.forEach(function (i) {
        return flat.push(i);
      });
    } else {
      flat.push(item);
    }

    return flat;
  }, []);

  return flattenedScopes.filter(function (s) {
    return !!s;
  });
};
exports.prepareScopes = prepareScopes;
